<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>wifi-extractor</groupId>
  <artifactId>wifi-extractor</artifactId>
  <packaging>jar</packaging>
  <version>0.0.1-SNAPSHOT</version>
  <name>wifi-extractor</name>
  <description>This is a small program to grab stored wifi passwords. I made this to play around with my command executor library</description>
  <build>
    <sourceDirectory>src</sourceDirectory>
    <plugins>
    
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.5.1</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>
      
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-dependencies</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>
                ${project.build.directory}/libs
              </outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <manifest>
              <addClasspath>true</addClasspath>
              <classpathPrefix>libs/</classpathPrefix>
              <mainClass>extractor.Extractor</mainClass>
            </manifest>
          </archive>
        </configuration>
      </plugin>
    
    </plugins>
  </build>
  
  <properties>
    <slf4jVersion>1.7.6</slf4jVersion>
    <Log4jVersion>1.7.5</Log4jVersion>
  </properties>
  
  <dependencies>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4jVersion}</version>
    </dependency>
  
<!-- We use log4j instead now
-    <dependency>
-      <groupId>org.slf4j</groupId>
-      <artifactId>slf4j-simple</artifactId>
-      <version>${slf4jVersion}</version>
-    </dependency>
-->
    
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>${Log4jVersion}</version>
    </dependency>
    
    <!-- This is a local dependency, see repositories below -->
    <dependency>
      <groupId>Shell-Command-Executor-Lib</groupId>
      <artifactId>Shell-Command-Executor-Lib</artifactId>
      <version>0.5.0</version>
    </dependency>

  </dependencies>
  
  
  
  
  <!-- Local repo to hold the shell command executor jar,
  - see http://blog.dub.podval.org/2010/01/maven-in-project-repository.html for info
  - In short, it searches in the repo folder:
  -
  - for each artifact with a group id of form x.y.z Maven will include the following 
  - location inside your project dir in its search for artifacts:
  -
  - repo/
  - | - x/
  - |   | - y/
  - |   |   | - z/
  - |   |   |   | - ${artifactId}/
  - |   |   |   |   | - ${version}/
  - |   |   |   |   |   | - ${artifactId}-${version}.jar
  -->
  
  <repositories>
    <repository>
      <id>repo</id>
      <name>repo</name>
      <releases>
        <enabled>true</enabled>
        <checksumPolicy>ignore</checksumPolicy>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <url>file://${project.basedir}/repo</url>
    </repository>
  </repositories>
  
</project>
